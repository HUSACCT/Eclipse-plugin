package plugin.views.internalframes;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;

public class JInternalHusacctSelectSource extends JInternalFrame implements ActionListener {
		   
		   /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
		JFileChooser jFileChooser;
		   String choosertitle;
		   JPanel jPanel = new JPanel();
		   private JTextField txtJava;
		   private JTextField txtVersion;
		   private JTextField txtSource;
		   
		   
		  public JInternalHusacctSelectSource() {
		    
		    
		    
		    getContentPane().add(jPanel);
		    
		    JLabel lblLanguage = new JLabel("Programm language");
		    
		    txtJava = new JTextField();
		    txtJava.setEnabled(false);
		    txtJava.setEditable(false);
		    txtJava.setText("Java");
		    txtJava.setColumns(10);
		    
		    JLabel lblVersion = new JLabel("Version number");
		    lblVersion.setToolTipText("Number of the version of your application");
		    
		    txtVersion = new JTextField();
		    txtVersion.setText("1.0");
		    txtVersion.setColumns(10);
		    
		    JLabel lblSelectSource = new JLabel("Select source");
		    lblSelectSource.setToolTipText("Select the directory of the application which has to be used by the HUSACCT-tool");
		    
		    txtSource = new JTextField();
		    txtSource.setEnabled(false);
		    txtSource.setColumns(10);
		    
		    JButton btnBrowse = new JButton("Browse");
		    
		    JButton btnSave = new JButton("Save");
		    
		    //Grouplayout code is generated by a windowbuilder plugin
		    GroupLayout gl_jPanel = new GroupLayout(jPanel);
		    gl_jPanel.setHorizontalGroup(
		    	gl_jPanel.createParallelGroup(Alignment.LEADING)
		    		.addGroup(gl_jPanel.createSequentialGroup()
		    			.addContainerGap()
		    			.addGroup(gl_jPanel.createParallelGroup(Alignment.LEADING)
		    				.addComponent(lblVersion)
		    				.addComponent(lblSelectSource)
		    				.addComponent(lblLanguage, GroupLayout.PREFERRED_SIZE, 125, GroupLayout.PREFERRED_SIZE))
		    			.addGap(18)
		    			.addGroup(gl_jPanel.createParallelGroup(Alignment.LEADING)
		    				.addComponent(btnSave)
		    				.addGroup(gl_jPanel.createSequentialGroup()
		    					.addComponent(txtSource, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
		    					.addPreferredGap(ComponentPlacement.RELATED)
		    					.addComponent(btnBrowse))
		    				.addGroup(gl_jPanel.createParallelGroup(Alignment.TRAILING)
		    					.addComponent(txtVersion, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
		    					.addComponent(txtJava, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
		    			.addContainerGap(64, Short.MAX_VALUE))
		    );
		    gl_jPanel.setVerticalGroup(
		    	gl_jPanel.createParallelGroup(Alignment.LEADING)
		    		.addGroup(gl_jPanel.createSequentialGroup()
		    			.addContainerGap()
		    			.addGroup(gl_jPanel.createParallelGroup(Alignment.BASELINE)
		    				.addComponent(lblLanguage, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
		    				.addComponent(txtJava, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
		    			.addPreferredGap(ComponentPlacement.UNRELATED)
		    			.addGroup(gl_jPanel.createParallelGroup(Alignment.BASELINE)
		    				.addComponent(lblVersion)
		    				.addComponent(txtVersion, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
		    			.addGap(18)
		    			.addGroup(gl_jPanel.createParallelGroup(Alignment.BASELINE)
		    				.addComponent(lblSelectSource)
		    				.addComponent(txtSource, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
		    				.addComponent(btnBrowse))
		    			.addPreferredGap(ComponentPlacement.UNRELATED)
		    			.addComponent(btnSave)
		    			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		    );
		    btnBrowse.addActionListener(this);
		    jPanel.setLayout(gl_jPanel);
    
		    
		    setBounds(50, 50, 392, 181);
		    setResizable(true);
		    setClosable(true);
		    setMaximizable(true);
		    setIconifiable(true);
		    setTitle("Select source");
		    setVisible(true);
		   
		   }
		 
		  public void actionPerformed(ActionEvent e) {		         
		    jFileChooser = new JFileChooser(); 
		    jFileChooser.setCurrentDirectory(new java.io.File("."));
		    jFileChooser.setDialogTitle(choosertitle);
		    jFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		    //
		    // disable the "All files" option.
		    //
		    jFileChooser.setAcceptAllFileFilterUsed(false);
		    //    
		    if (jFileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
		       txtSource.setText(jFileChooser.getCurrentDirectory() + "");
		      }
		    else {
		      System.out.println("No Selection ");
		      }
		     }
}
